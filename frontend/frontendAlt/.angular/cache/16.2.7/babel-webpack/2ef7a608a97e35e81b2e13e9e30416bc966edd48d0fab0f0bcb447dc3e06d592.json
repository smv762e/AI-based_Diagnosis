{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/robot.service\";\nimport * as i2 from \"@angular/common\";\nfunction RobotListComponent_ul_3_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const robot_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Nombre: \", robot_r3.Nombre, \" - Estado: \", robot_r3.estado, \" \");\n  }\n}\nfunction RobotListComponent_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, RobotListComponent_ul_3_li_1_Template, 2, 2, \"li\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.robots);\n  }\n}\nfunction RobotListComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No hay robots disponibles.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RobotListComponent {\n  constructor(robotService) {\n    this.robotService = robotService;\n    this.robots = [];\n  }\n  ngOnInit() {\n    this.loadRobots();\n  }\n  loadRobots() {\n    this.robotService.getAllRobots().subscribe(robots => {\n      console.log('Respuesta del servicio:', robots);\n      this.robots = robots;\n    }, error => {\n      console.error('Error al cargar la lista de robots', error);\n    });\n  }\n  static #_ = this.ɵfac = function RobotListComponent_Factory(t) {\n    return new (t || RobotListComponent)(i0.ɵɵdirectiveInject(i1.RobotService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RobotListComponent,\n    selectors: [[\"app-robots\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function RobotListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Lista de Robots\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, RobotListComponent_ul_3_Template, 2, 1, \"ul\", 0);\n        i0.ɵɵtemplate(4, RobotListComponent_p_4_Template, 2, 0, \"p\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.robots.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.robots.length === 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","robot_r3","Nombre","estado","ɵɵtemplate","RobotListComponent_ul_3_li_1_Template","ɵɵproperty","ctx_r0","robots","RobotListComponent","constructor","robotService","ngOnInit","loadRobots","getAllRobots","subscribe","console","log","error","_","ɵɵdirectiveInject","i1","RobotService","_2","selectors","decls","vars","consts","template","RobotListComponent_Template","rf","ctx","RobotListComponent_ul_3_Template","RobotListComponent_p_4_Template","length"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\robots\\robots.component.ts","C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\robots\\robots.component.html"],"sourcesContent":["// robot-list.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { RobotService } from '../services/robot.service';\n\n@Component({\n  selector: 'app-robots',\n  templateUrl: './robots.component.html',\n  styleUrls: ['./robots.component.css']\n})\nexport class RobotListComponent implements OnInit {\n  robots: any[] = []; \n\n  constructor(private robotService: RobotService) { }\n\n  ngOnInit(): void {\n    this.loadRobots();\n  }\n\n  private loadRobots(): void {\n    this.robotService.getAllRobots().subscribe(\n        (robots: any[]) => {\n            console.log('Respuesta del servicio:', robots);\n            this.robots = robots;\n        },\n        (error) => {\n            console.error('Error al cargar la lista de robots', error);\n        }\n    );\n}\n}\n\n","<div>\n  <h2>Lista de Robots</h2>\n  <ul *ngIf=\"robots.length > 0\">\n      <li *ngFor=\"let robot of robots\">\n          Nombre: {{ robot.Nombre }} - Estado: {{ robot.estado }}\n      </li>\n  </ul>\n  <p *ngIf=\"robots.length === 0\">No hay robots disponibles.</p>\n</div>\n"],"mappings":";;;;;ICGMA,EAAA,CAAAC,cAAA,SAAiC;IAC7BD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADDH,EAAA,CAAAI,SAAA,GACJ;IADIJ,EAAA,CAAAK,kBAAA,cAAAC,QAAA,CAAAC,MAAA,iBAAAD,QAAA,CAAAE,MAAA,MACJ;;;;;IAHJR,EAAA,CAAAC,cAAA,SAA8B;IAC1BD,EAAA,CAAAS,UAAA,IAAAC,qCAAA,gBAEK;IACTV,EAAA,CAAAG,YAAA,EAAK;;;;IAHqBH,EAAA,CAAAI,SAAA,GAAS;IAATJ,EAAA,CAAAW,UAAA,YAAAC,MAAA,CAAAC,MAAA,CAAS;;;;;IAInCb,EAAA,CAAAC,cAAA,QAA+B;IAAAD,EAAA,CAAAE,MAAA,iCAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;ADE/D,OAAM,MAAOW,kBAAkB;EAG7BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAH,MAAM,GAAU,EAAE;EAEgC;EAElDI,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEQA,UAAUA,CAAA;IAChB,IAAI,CAACF,YAAY,CAACG,YAAY,EAAE,CAACC,SAAS,CACrCP,MAAa,IAAI;MACdQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAET,MAAM,CAAC;MAC9C,IAAI,CAACA,MAAM,GAAGA,MAAM;IACxB,CAAC,EACAU,KAAK,IAAI;MACNF,OAAO,CAACE,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC9D,CAAC,CACJ;EACL;EAAC,QAAAC,CAAA,G;qBAnBYV,kBAAkB,EAAAd,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBd,kBAAkB;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT/BnC,EAAA,CAAAC,cAAA,UAAK;QACCD,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACxBH,EAAA,CAAAS,UAAA,IAAA4B,gCAAA,gBAIK;QACLrC,EAAA,CAAAS,UAAA,IAAA6B,+BAAA,eAA6D;QAC/DtC,EAAA,CAAAG,YAAA,EAAM;;;QANCH,EAAA,CAAAI,SAAA,GAAuB;QAAvBJ,EAAA,CAAAW,UAAA,SAAAyB,GAAA,CAAAvB,MAAA,CAAA0B,MAAA,KAAuB;QAKxBvC,EAAA,CAAAI,SAAA,GAAyB;QAAzBJ,EAAA,CAAAW,UAAA,SAAAyB,GAAA,CAAAvB,MAAA,CAAA0B,MAAA,OAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}