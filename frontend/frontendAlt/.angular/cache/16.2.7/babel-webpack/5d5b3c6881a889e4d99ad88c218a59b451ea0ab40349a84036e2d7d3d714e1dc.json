{"ast":null,"code":"import { __decorate } from \"tslib\";\n// login.component.ts\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(adminService, router) {\n    this.adminService = adminService;\n    this.router = router;\n    this.user = '';\n    this.password = '';\n  }\n  login() {\n    this.adminService.login(this.user, this.password).subscribe(response => {\n      // Manejar la respuesta del backend (por ejemplo, almacenar token de sesión)\n      // Redirigir a la página principal u otra página después del login\n      this.router.navigate(['/home']);\n    }, error => {\n      // Manejar el error, por ejemplo, mostrar un mensaje de error al usuario\n      console.error('Error en el login:', error);\n      // Puedes mostrar un mensaje de error en la interfaz de usuario si lo prefieres\n    });\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","adminService","router","user","password","login","subscribe","response","navigate","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\login\\login.component.ts"],"sourcesContent":["// login.component.ts\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdminService } from '../admin.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  user: string = '';\n  password: string = '';\n\n  constructor(private adminService: AdminService, private router: Router) { }\n\n  login(): void {\n    this.adminService.login(this.user, this.password).subscribe(\n      response => {\n        // Manejar la respuesta del backend (por ejemplo, almacenar token de sesión)\n        // Redirigir a la página principal u otra página después del login\n        this.router.navigate(['/home']);\n      },\n      error => {\n        // Manejar el error, por ejemplo, mostrar un mensaje de error al usuario\n        console.error('Error en el login:', error);\n        // Puedes mostrar un mensaje de error en la interfaz de usuario si lo prefieres\n      }\n    );\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,KAAAD,YAAY,GAAZA,YAAY;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAH9D,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,QAAQ,GAAW,EAAE;EAEqD;EAE1EC,KAAKA,CAAA;IACH,IAAI,CAACJ,YAAY,CAACI,KAAK,CAAC,IAAI,CAACF,IAAI,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACE,SAAS,CACzDC,QAAQ,IAAG;MACT;MACA;MACA,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACDC,KAAK,IAAG;MACN;MACAC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC,CACF;EACH;CACD;;AArBYV,cAAc,GAAAY,UAAA,EAL1Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWf,cAAc,CAqB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}