{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/robot.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nfunction RobotListComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const robot_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" ID: \", robot_r3.id, \" - Estado: \", robot_r3.state, \" \");\n  }\n}\nfunction RobotListComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Robots\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RobotListComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RobotListComponent {\n  constructor(robotService) {\n    this.robotService = robotService;\n    this.robots = [];\n  }\n  ngOnInit() {\n    this.loadRobots();\n  }\n  loadRobots() {\n    this.robotService.getAllRobots().subscribe(robots => {\n      this.robots = robots;\n    }, error => {\n      console.error('Error al cargar la lista de robots', error);\n    });\n  }\n  static #_ = this.ɵfac = function RobotListComponent_Factory(t) {\n    return new (t || RobotListComponent)(i0.ɵɵdirectiveInject(i1.RobotService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RobotListComponent,\n    selectors: [[\"app-robots\"]],\n    decls: 12,\n    vars: 4,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"row-buttons\"], [1, \"spacer\"], [\"mat-button\", \"\", 1, \"form-btn\", 3, \"click\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"accent\", 1, \"form-btn\", 3, \"disabled\"], [4, \"ngIf\"]],\n    template: function RobotListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Lista de Robots\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ul\");\n        i0.ɵɵtemplate(4, RobotListComponent_li_4_Template, 2, 2, \"li\", 0);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵelement(6, \"span\", 2);\n        i0.ɵɵelementStart(7, \"a\", 3);\n        i0.ɵɵlistener(\"click\", function RobotListComponent_Template_a_click_7_listener() {\n          return ctx.back();\n        });\n        i0.ɵɵtext(8, \"Go Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 4);\n        i0.ɵɵtemplate(10, RobotListComponent_div_10_Template, 2, 0, \"div\", 5);\n        i0.ɵɵtemplate(11, RobotListComponent_div_11_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.robots);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.robots);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.create);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.MatAnchor, i3.MatButton],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","robot_r3","id","state","RobotListComponent","constructor","robotService","robots","ngOnInit","loadRobots","getAllRobots","subscribe","error","console","_","ɵɵdirectiveInject","i1","RobotService","_2","selectors","decls","vars","consts","template","RobotListComponent_Template","rf","ctx","ɵɵtemplate","RobotListComponent_li_4_Template","ɵɵelement","ɵɵlistener","RobotListComponent_Template_a_click_7_listener","back","RobotListComponent_div_10_Template","RobotListComponent_div_11_Template","ɵɵproperty","form","invalid","create"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\robots\\robots.component.ts","C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\robots\\robots.component.html"],"sourcesContent":["// robot-list.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { RobotService } from '../services/robot.service';\n\n@Component({\n  selector: 'app-robots',\n  templateUrl: './robots.component.html',\n  styleUrls: ['./robots.component.css']\n})\nexport class RobotListComponent implements OnInit {\n  robots: any[] = []; \n\n  constructor(private robotService: RobotService) { }\n\n  ngOnInit(): void {\n    this.loadRobots();\n  }\n\n  private loadRobots(): void {\n    this.robotService.getAllRobots().subscribe(\n      (robots: any[]) => {\n        this.robots = robots;\n      },\n      (error: any) => {\n        console.error('Error al cargar la lista de robots', error);\n      }\n    );\n  }\n}\n\n","<!-- robot-list.component.html -->\n<div>\n    <h2>Lista de Robots</h2>\n    <ul>\n      <li *ngFor=\"let robot of robots\">\n        ID: {{ robot.id }} - Estado: {{ robot.state }}\n      </li>\n    </ul>\n  </div>\n  \n  <div class=\"row-buttons\">\n    <span class=\"spacer\"></span>\n    <a (click)=\"back()\" class=\"form-btn\" mat-button>Go Back</a>\n    <button type=\"submit\" class=\"form-btn\" [disabled]=\"form.invalid\" mat-raised-button color=\"accent\">\n    <div *ngIf=\"robots\">Robots</div>\n    <div *ngIf=\"!create\">Edit</div>\n    </button>\n</div>     "],"mappings":";;;;;;ICIMA,EAAA,CAAAC,cAAA,SAAiC;IAC/BD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADHH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,UAAAC,QAAA,CAAAC,EAAA,iBAAAD,QAAA,CAAAE,KAAA,MACF;;;;;IAQFR,EAAA,CAAAC,cAAA,UAAoB;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAChCH,EAAA,CAAAC,cAAA,UAAqB;IAAAD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADNnC,OAAM,MAAOM,kBAAkB;EAG7BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAC,MAAM,GAAU,EAAE;EAEgC;EAElDC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEQA,UAAUA,CAAA;IAChB,IAAI,CAACH,YAAY,CAACI,YAAY,EAAE,CAACC,SAAS,CACvCJ,MAAa,IAAI;MAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACtB,CAAC,EACAK,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBAlBUV,kBAAkB,EAAAT,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBd,kBAAkB;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/B9B,EAAA,CAAAC,cAAA,UAAK;QACGD,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACxBH,EAAA,CAAAC,cAAA,SAAI;QACFD,EAAA,CAAAgC,UAAA,IAAAC,gCAAA,gBAEK;QACPjC,EAAA,CAAAG,YAAA,EAAK;QAGPH,EAAA,CAAAC,cAAA,aAAyB;QACvBD,EAAA,CAAAkC,SAAA,cAA4B;QAC5BlC,EAAA,CAAAC,cAAA,WAAgD;QAA7CD,EAAA,CAAAmC,UAAA,mBAAAC,+CAAA;UAAA,OAASL,GAAA,CAAAM,IAAA,EAAM;QAAA,EAAC;QAA6BrC,EAAA,CAAAE,MAAA,cAAO;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC3DH,EAAA,CAAAC,cAAA,gBAAkG;QAClGD,EAAA,CAAAgC,UAAA,KAAAM,kCAAA,iBAAgC;QAChCtC,EAAA,CAAAgC,UAAA,KAAAO,kCAAA,iBAA+B;QAC/BvC,EAAA,CAAAG,YAAA,EAAS;;;QAZeH,EAAA,CAAAI,SAAA,GAAS;QAATJ,EAAA,CAAAwC,UAAA,YAAAT,GAAA,CAAAnB,MAAA,CAAS;QASMZ,EAAA,CAAAI,SAAA,GAAyB;QAAzBJ,EAAA,CAAAwC,UAAA,aAAAT,GAAA,CAAAU,IAAA,CAAAC,OAAA,CAAyB;QAC1D1C,EAAA,CAAAI,SAAA,GAAY;QAAZJ,EAAA,CAAAwC,UAAA,SAAAT,GAAA,CAAAnB,MAAA,CAAY;QACZZ,EAAA,CAAAI,SAAA,GAAa;QAAbJ,EAAA,CAAAwC,UAAA,UAAAT,GAAA,CAAAY,MAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}