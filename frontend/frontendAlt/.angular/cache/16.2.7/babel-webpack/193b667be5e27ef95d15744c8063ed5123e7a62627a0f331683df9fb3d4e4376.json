{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/admin.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.authService.isAuthenticatedUser()) {\n      return true; // Permite el acceso si el usuario está autenticado\n    } else {\n      this.router.navigate(['/login']); // Redirige al componente de inicio de sesión si no está autenticado\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AdminService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","isAuthenticatedUser","navigate","_","i0","ɵɵinject","i1","AdminService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AdminService } from './services/admin.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AdminService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.isAuthenticatedUser()) {\r\n      return true; // Permite el acceso si el usuario está autenticado\r\n    } else {\r\n      this.router.navigate(['/login']); // Redirige al componente de inicio de sesión si no está autenticado\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAyB,EAAUC,MAAc;IAAjD,KAAAD,WAAW,GAAXA,WAAW;IAAwB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAExEC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,WAAW,CAACG,mBAAmB,EAAE,EAAE;MAC1C,OAAO,IAAI,CAAC,CAAC;KACd,MAAM;MACL,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClC,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAVUP,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATd,SAAS;IAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}