{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/robot.service\";\nimport * as i2 from \"@angular/common\";\nfunction RobotListComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const robot_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(robot_r1.estado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(robot_r1.nombre);\n  }\n}\nexport class RobotListComponent {\n  constructor(robotService) {\n    this.robotService = robotService;\n    this.displayedColumns = ['id', 'nombre', 'estado', 'view', 'delete'];\n    this.robots = [];\n    this.element = {};\n    this.dataSource = new MatTableDataSource(this.robots);\n  }\n  ngOnInit() {\n    this.loadRobots();\n  }\n  loadRobots() {\n    this.robotService.getAllRobots().subscribe(data => {\n      this.robots = data;\n    });\n  }\n  static #_ = this.ɵfac = function RobotListComponent_Factory(t) {\n    return new (t || RobotListComponent)(i0.ɵɵdirectiveInject(i1.RobotService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RobotListComponent,\n    selectors: [[\"app-robots\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function RobotListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Lista de Robots\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n        i0.ɵɵtext(7, \"Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Nombre\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"tbody\");\n        i0.ɵɵtemplate(11, RobotListComponent_tr_11_Template, 5, 2, \"tr\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.robots);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["MatTableDataSource","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","robot_r1","estado","nombre","RobotListComponent","constructor","robotService","displayedColumns","robots","element","dataSource","ngOnInit","loadRobots","getAllRobots","subscribe","data","_","ɵɵdirectiveInject","i1","RobotService","_2","selectors","decls","vars","consts","template","RobotListComponent_Template","rf","ctx","ɵɵtemplate","RobotListComponent_tr_11_Template","ɵɵproperty"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\robots\\robots.component.ts","C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\robots\\robots.component.html"],"sourcesContent":["// robot-list.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { RobotService } from '../services/robot.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-robots',\n  templateUrl: './robots.component.html',\n  styleUrls: ['./robots.component.css']\n})\nexport class RobotListComponent implements OnInit {\n\n  displayedColumns = ['id', 'nombre', 'estado', 'view', 'delete'];\n  robots: any[] = []; \n  element = {};\n  dataSource = new MatTableDataSource(this.robots);\n\n  constructor(private robotService: RobotService) { }\n\n  ngOnInit(): void {\n    this.loadRobots();\n  }\n\n  loadRobots() {\n    this.robotService.getAllRobots().subscribe((data: any[]) => {\n      this.robots = data;\n    });\n  }\n  \n}","<div class=\"container\">\n  <h2>Lista de Robots</h2>\n\n  <table class=\"table table-bordered\">\n    <thead>\n      <tr>\n        <th>Estado</th>\n        <th>Nombre</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let robot of robots\">\n        <td>{{ robot.estado }}</td>\n        <td>{{ robot.nombre }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>"],"mappings":"AAGA,SAASA,kBAAkB,QAAQ,yBAAyB;;;;;;ICQtDC,EAAA,CAAAC,cAAA,SAAiC;IAC3BD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADvBH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAC,MAAA,CAAkB;IAClBP,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAE,MAAA,CAAkB;;;ADA9B,OAAM,MAAOC,kBAAkB;EAO7BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IALhC,KAAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;IAC/D,KAAAC,MAAM,GAAU,EAAE;IAClB,KAAAC,OAAO,GAAG,EAAE;IACZ,KAAAC,UAAU,GAAG,IAAIhB,kBAAkB,CAAC,IAAI,CAACc,MAAM,CAAC;EAEE;EAElDG,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACN,YAAY,CAACO,YAAY,EAAE,CAACC,SAAS,CAAEC,IAAW,IAAI;MACzD,IAAI,CAACP,MAAM,GAAGO,IAAI;IACpB,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAjBUZ,kBAAkB,EAAAT,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBhB,kBAAkB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb/BhC,EAAA,CAAAC,cAAA,aAAuB;QACjBD,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAExBH,EAAA,CAAAC,cAAA,eAAoC;QAG1BD,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACfH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGnBH,EAAA,CAAAC,cAAA,aAAO;QACLD,EAAA,CAAAkC,UAAA,KAAAC,iCAAA,gBAGK;QACPnC,EAAA,CAAAG,YAAA,EAAQ;;;QAJgBH,EAAA,CAAAI,SAAA,IAAS;QAATJ,EAAA,CAAAoC,UAAA,YAAAH,GAAA,CAAApB,MAAA,CAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}