{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CreateSolicitudComponent = class CreateSolicitudComponent {\n  constructor(requestService, medicalService, snackbar, router, route, _location) {\n    this.requestService = requestService;\n    this.medicalService = medicalService;\n    this.snackbar = snackbar;\n    this.router = router;\n    this.route = route;\n    this._location = _location;\n    this.request = {\n      id: undefined,\n      drugs: '',\n      route: '',\n      medico: {\n        id: undefined,\n        user: '',\n        password: ''\n      },\n      accepted: false\n    };\n    this.create = true;\n    this.requestId = 0;\n  }\n  ngOnInit() {\n    if (this.route.snapshot.paramMap.has('id')) {\n      this.requestId = Number(this.route.snapshot.paramMap.get('id'));\n      this.create = false;\n    }\n    if (!this.create) {\n      this.requestService.getRequest(this.requestId).subscribe({\n        next: data => {\n          this.request = data;\n        },\n        error: e => {\n          this.snackbar.open('Error de comunicación con el servidor', '', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n  back() {\n    this._location.back();\n  }\n  onSubmit(request) {\n    if (this.create) {\n      if (!request.medico) {\n        // Aquí puedes manejar el caso cuando medico no está definido\n        this.snackbar.open('Error: Medico indefinido', '', {\n          duration: 3000\n        });\n        return;\n      }\n      if (request.medico.id !== undefined) {\n        this.medicalService.getMedicalById(request.medico.id).subscribe({\n          next: medicoData => {\n            request.medico = {\n              id: medicoData.id,\n              user: medicoData.user,\n              password: medicoData.password\n            };\n            this.requestService.createRequest(request).subscribe({\n              next: () => {\n                this.router.navigateByUrl('/request');\n                this.snackbar.open('Solicitud creada ', '', {\n                  duration: 3000\n                });\n              },\n              error: e => {\n                this.snackbar.open('Error al crear la solicitud: ' + e.error, '', {\n                  duration: 3000\n                });\n              }\n            });\n          },\n          error: error => {\n            this.snackbar.open('Error al obtener información del médico: ' + error, '', {\n              duration: 3000\n            });\n          }\n        });\n      } else {\n        this.snackbar.open('Error: ID del médico indefinido', '', {\n          duration: 3000\n        });\n      }\n    } else {\n      this.requestService.updateRequest(request).subscribe({\n        next: () => {\n          this.router.navigateByUrl('/request');\n          this.snackbar.open('Solicitud actualizada ', '', {\n            duration: 3000\n          });\n        },\n        error: e => {\n          this.snackbar.open('Error al actualizar la solicitud: ' + e.error, '', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n};\nCreateSolicitudComponent = __decorate([Component({\n  selector: 'app-create-solicitud',\n  templateUrl: './create-solicitud.component.html',\n  styleUrls: ['./create-solicitud.component.css']\n})], CreateSolicitudComponent);","map":{"version":3,"names":["Component","CreateSolicitudComponent","constructor","requestService","medicalService","snackbar","router","route","_location","request","id","undefined","drugs","medico","user","password","accepted","create","requestId","ngOnInit","snapshot","paramMap","has","Number","get","getRequest","subscribe","next","data","error","e","open","duration","back","onSubmit","getMedicalById","medicoData","createRequest","navigateByUrl","updateRequest","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\create-solicitud\\create-solicitud.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { RequestService } from '../services/request.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Request } from '../request';\nimport { Location } from '@angular/common';\nimport { MedicalService } from '../services/medical.service';\n\n@Component({\n  selector: 'app-create-solicitud',\n  templateUrl: './create-solicitud.component.html',\n  styleUrls: ['./create-solicitud.component.css']\n})\nexport class CreateSolicitudComponent {\n\n  request: Request = {\n    id: undefined,\n    drugs: '',\n    route: '',\n    medico: { id: undefined, user: '', password: '' },\n    accepted: false\n  };\n  create: boolean = true;\n  requestId: number = 0;\n\n  constructor(\n    private requestService: RequestService,\n    private medicalService: MedicalService,\n    private snackbar: MatSnackBar,\n    private router: Router,\n    private route: ActivatedRoute,\n    private _location: Location\n  ) { }\n\n  ngOnInit(): void {\n    if (this.route.snapshot.paramMap.has('id')) {\n      this.requestId = Number(this.route.snapshot.paramMap.get('id'));\n      this.create = false;\n    }\n\n    if (!this.create) {\n      this.requestService.getRequest(this.requestId).subscribe({\n        next: (data: any) => {\n          this.request = <Request>data;\n        },\n        error: (e: any) => {\n          this.snackbar.open('Error de comunicación con el servidor', '', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n\n  back() {\n    this._location.back();\n  }\n\n  onSubmit(request: Request) {\n    if (this.create) {\n      if (!request.medico) {\n        // Aquí puedes manejar el caso cuando medico no está definido\n        this.snackbar.open('Error: Medico indefinido', '', {\n          duration: 3000\n        });\n        return;\n      }\n\n      if (request.medico.id !== undefined) {\n        this.medicalService.getMedicalById(request.medico.id).subscribe({\n          next: (medicoData: any) => {\n            request.medico = { id: medicoData.id, user: medicoData.user, password: medicoData.password };\n  \n            this.requestService.createRequest(request).subscribe({\n              next: () => {\n                this.router.navigateByUrl('/request');\n                this.snackbar.open('Solicitud creada ', '', {\n                  duration: 3000\n                });\n              },\n              error: (e: any) => {\n                this.snackbar.open('Error al crear la solicitud: ' + e.error, '', {\n                  duration: 3000\n                });\n              }\n            });\n          },\n          error: (error: any) => {\n            this.snackbar.open('Error al obtener información del médico: ' + error, '', {\n              duration: 3000\n            });\n          }\n        });\n      } else {\n        this.snackbar.open('Error: ID del médico indefinido', '', {\n          duration: 3000\n        });\n      }\n    } else {\n      this.requestService.updateRequest(request).subscribe({\n        next: () => {\n          this.router.navigateByUrl('/request');\n          this.snackbar.open('Solicitud actualizada ', '', {\n            duration: 3000\n          });\n        },\n        error: (e: any) => {\n          this.snackbar.open('Error al actualizar la solicitud: ' + e.error, '', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}