{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RobotService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.baseUrl;\n  }\n  getAllRobots() {\n    const url = `${this.baseUrl}/trolleys`; // Reemplaza con la ruta correcta de tu API\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function RobotService_Factory(t) {\n    return new (t || RobotService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RobotService,\n    factory: RobotService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","RobotService","constructor","http","baseUrl","getAllRobots","url","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\services\\robot.service.ts"],"sourcesContent":["// robot.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RobotService {\r\n  private baseUrl = environment.baseUrl;; \r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllRobots(): Observable<any[]> {\r\n    const url = `${this.baseUrl}/trolleys`; // Reemplaza con la ruta correcta de tu API\r\n    return this.http.get<any[]>(url);\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAGJ,WAAW,CAACI,OAAO;EAEG;EAExCC,YAAYA,CAAA;IACV,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,OAAO,WAAW,CAAC,CAAC;IACxC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAQD,GAAG,CAAC;EAClC;EAAC,QAAAE,CAAA,G;qBARUP,YAAY,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZZ,YAAY;IAAAa,OAAA,EAAZb,YAAY,CAAAc,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}