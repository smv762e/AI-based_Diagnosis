{
  "openapi": "3.0.0",
  "info": {
    "title": "Backend Robot API",
    "version": "1.0.0",
    "description": "API for managing trolleys, technicals, routes,request,records,medicals, and admins "
  },
  "paths": {
    "/trolleys": {
      "get": {
        "summary": "Get all trolleys",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "Trolley 1",
                    "state": "ACTIVE"
                    
                  },
                 
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new trolley",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "New Trolley",
                "state": "ACTIVE"
              
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Trolley created successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 2,
                  "name": "New Trolley",
                  "state": "ACTIVE"
                  
                }
              }
            }
          }
        }
      }
     
    },
    "/trolleys/{id}": {
      "get": {
        "summary": "Get trolley by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Trolley 1",
                  "state": "ACTIVE"
                  // Add more fields as needed
                }
              }
            }
          },
          "404": {
            "description": "Trolley not found"
          }
        }
      },
      "delete": {
        "summary": "Delete trolley by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Trolley deleted successfully"
          },
          "404": {
            "description": "Trolley not found"
          }
        }
      }
      
    },
    "/trolleys/{id}/change-state": {
      "patch": {
        "summary": "Change trolley state by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "newState",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trolley state changed successfully"
          },
          "404": {
            "description": "Trolley not found"
          }
        }
      }
    },
    "/api/technical/{technicalId}": {
      "get": {
        "summary": "Get technical by ID",
        "parameters": [
          {
            "name": "technicalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "user": "john_doe",
                  "password": "********"
                  
                }
              }
            }
          },
          "404": {
            "description": "Technical not found"
          }
        }
      }
      
    },
    "/api/technical/{technicalId}/sendCar": {
      "post": {
        "summary": "Send car for technical by ID",
        "parameters": [
          {
            "name": "technicalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "requestId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "carNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Car sent successfully"
          },
          "500": {
            "description": "Failed to send car"
          }
        }
      }
    }
    
  }
}
"paths": {
    "/routes": {
      "get": {
        "summary": "Get all routes",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "Route 1",
                    
                  },
                  
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new route",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "New Route",
                
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Route created successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 2,
                  "name": "New Route",
                  
                }
              }
            }
          }
        }
      }
      
    },
    "/routes/{id}": {
      
    },
    "/requests": {
      
    },
    "/requests/{id}": {
      
    }
"paths": {
    "/records": {
      
    },
    "/records/{id}": {
      
    },
    "/medicals": {
     
    },
    "/medicals/{id}": {
      
    },
    "/medicals/{medicalId}/requests": {
      
    },
    "/medicals/{medicalId}/requests/{requestId}": {
      
    },
    "/admins": {
     
    },
    "/admins/{id}": {
      
    },
    "/admins/{adminId}/add-route": {
      
    },
    "/admins/{adminId}/remove-route/{routeId}": {
      
    }
    
  }
}