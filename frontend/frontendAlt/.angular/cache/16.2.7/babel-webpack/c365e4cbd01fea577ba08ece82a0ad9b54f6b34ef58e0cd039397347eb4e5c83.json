{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/robot.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nexport class RobotListComponent {\n  constructor(robotService) {\n    this.robotService = robotService;\n    this.robots = [];\n  }\n  ngOnInit() {\n    this.loadRobots();\n  }\n  loadRobots() {\n    this.robotService.getAllRobots().subscribe(robots => {\n      this.robots = robots;\n    }, error => {\n      console.error('Error al cargar la lista de robots', error);\n    });\n  }\n  static #_ = this.ɵfac = function RobotListComponent_Factory(t) {\n    return new (t || RobotListComponent)(i0.ɵɵdirectiveInject(i1.RobotService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RobotListComponent,\n    selectors: [[\"app-robots\"]],\n    decls: 19,\n    vars: 0,\n    consts: [[\"color\", \"primary\"], [\"mat-button\", \"\", \"routerLink\", \"/\"], [\"mat-button\", \"\", \"routerLink\", \"/create\"], [\"mat-button\", \"\", \"routerLink\", \"/robots\"], [\"mat-button\", \"\"]],\n    template: function RobotListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"span\");\n        i0.ɵɵtext(2, \" Ingenieria Web \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵtext(4, \"Home \");\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"dashboard\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"button\", 2);\n        i0.ɵɵtext(8, \"Create \");\n        i0.ɵɵelementStart(9, \"mat-icon\");\n        i0.ɵɵtext(10, \"book\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 3);\n        i0.ɵɵtext(12, \"Robots \");\n        i0.ɵɵelementStart(13, \"mat-icon\");\n        i0.ɵɵtext(14, \"book\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"button\", 4);\n        i0.ɵɵtext(16, \"Logout \");\n        i0.ɵɵelementStart(17, \"mat-icon\");\n        i0.ɵɵtext(18, \"logout\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i2.RouterLink, i3.MatToolbar, i4.MatIcon, i5.MatButton],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["RobotListComponent","constructor","robotService","robots","ngOnInit","loadRobots","getAllRobots","subscribe","error","console","_","i0","ɵɵdirectiveInject","i1","RobotService","_2","selectors","decls","vars","consts","template","RobotListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\robots\\robots.component.ts","C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\robots\\robots.component.html"],"sourcesContent":["// robot-list.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { RobotService } from '../services/robot.service';\n\n@Component({\n  selector: 'app-robots',\n  templateUrl: './robots.component.html',\n  styleUrls: ['./robots.component.css']\n})\nexport class RobotListComponent implements OnInit {\n  robots: any[] = []; \n\n  constructor(private robotService: RobotService) { }\n\n  ngOnInit(): void {\n    this.loadRobots();\n  }\n\n  private loadRobots(): void {\n    this.robotService.getAllRobots().subscribe(\n      (robots: any[]) => {\n        this.robots = robots;\n      },\n      (error: any) => {\n        console.error('Error al cargar la lista de robots', error);\n      }\n    );\n  }\n}\n\n","<mat-toolbar color=\"primary\">\n  <span>\n     Ingenieria Web\n  </span>\n  <button mat-button routerLink=\"/\">Home\n      <mat-icon>dashboard</mat-icon> </button>\n  <button mat-button routerLink=\"/create\">Create\n      <mat-icon>book</mat-icon>\n  </button>\n  <button mat-button routerLink=\"/robots\">Robots\n      <mat-icon>book</mat-icon>\n  </button>    \n  <button mat-button>Logout\n      <mat-icon>logout</mat-icon>\n  </button>\n</mat-toolbar>"],"mappings":";;;;;;AASA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAFhC,KAAAC,MAAM,GAAU,EAAE;EAEgC;EAElDC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEQA,UAAUA,CAAA;IAChB,IAAI,CAACH,YAAY,CAACI,YAAY,EAAE,CAACC,SAAS,CACvCJ,MAAa,IAAI;MAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACtB,CAAC,EACAK,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBAlBUV,kBAAkB,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBf,kBAAkB;IAAAgB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT/BX,EAAA,CAAAa,cAAA,qBAA6B;QAExBb,EAAA,CAAAc,MAAA,uBACH;QAAAd,EAAA,CAAAe,YAAA,EAAO;QACPf,EAAA,CAAAa,cAAA,gBAAkC;QAAAb,EAAA,CAAAc,MAAA,YAC9B;QAAAd,EAAA,CAAAa,cAAA,eAAU;QAAAb,EAAA,CAAAc,MAAA,gBAAS;QAAAd,EAAA,CAAAe,YAAA,EAAW;QAClCf,EAAA,CAAAa,cAAA,gBAAwC;QAAAb,EAAA,CAAAc,MAAA,cACpC;QAAAd,EAAA,CAAAa,cAAA,eAAU;QAAAb,EAAA,CAAAc,MAAA,YAAI;QAAAd,EAAA,CAAAe,YAAA,EAAW;QAE7Bf,EAAA,CAAAa,cAAA,iBAAwC;QAAAb,EAAA,CAAAc,MAAA,eACpC;QAAAd,EAAA,CAAAa,cAAA,gBAAU;QAAAb,EAAA,CAAAc,MAAA,YAAI;QAAAd,EAAA,CAAAe,YAAA,EAAW;QAE7Bf,EAAA,CAAAa,cAAA,iBAAmB;QAAAb,EAAA,CAAAc,MAAA,eACf;QAAAd,EAAA,CAAAa,cAAA,gBAAU;QAAAb,EAAA,CAAAc,MAAA,cAAM;QAAAd,EAAA,CAAAe,YAAA,EAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}