{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MedicalService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = environment.baseUrl;\n    this.url = this.baseUrl + '/medicals'; // Adjust this URL based on your backend API\n  }\n\n  getMedicalById(id) {\n    const url = `${this.url}/${id}`;\n    return this.httpClient.get(url);\n  }\n  static #_ = this.ɵfac = function MedicalService_Factory(t) {\n    return new (t || MedicalService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MedicalService,\n    factory: MedicalService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","MedicalService","constructor","httpClient","baseUrl","url","getMedicalById","id","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\services\\medical.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Medical } from '../medicals'; \r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicalService {\r\n\r\n  baseUrl = environment.baseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  url = this.baseUrl + '/medicals'; // Adjust this URL based on your backend API\r\n\r\n  getMedicalById(id: number): Observable<Medical> {\r\n    const url = `${this.url}/${id}`;\r\n    return this.httpClient.get<Medical>(url);\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,gCAAgC;;;AAO5D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,OAAO,GAAGJ,WAAW,CAACI,OAAO;IAI7B,KAAAC,GAAG,GAAG,IAAI,CAACD,OAAO,GAAG,WAAW,CAAC,CAAC;EAFY;;EAI9CE,cAAcA,CAACC,EAAU;IACvB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACA,GAAG,IAAIE,EAAE,EAAE;IAC/B,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAUH,GAAG,CAAC;EAC1C;EAAC,QAAAI,CAAA,G;qBAXUR,cAAc,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdb,cAAc;IAAAc,OAAA,EAAdd,cAAc,CAAAe,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}