{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RequestService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = environment.baseUrl;\n    this.url = this.baseUrl + '/request';\n  }\n  getRequests() {\n    return this.httpClient.get(this.url);\n  }\n  acceptRequest(requestId, robotId) {\n    const url = `${this.baseUrl}/request/accept/${requestId}`;\n    // Puedes enviar el ID del carro al servidor si es necesario\n    return this.httpClient.put(url, {\n      robotId\n    });\n  }\n  getRequest(id) {\n    return this.httpClient.get(this.url + '/' + id);\n  }\n  createRequest(data) {\n    return this.httpClient.post(this.url, data);\n  }\n  updateRequest(data) {\n    return this.httpClient.put(this.url, data);\n  }\n  deleteRequest(id) {\n    return this.httpClient.delete(this.url + '/' + id);\n  }\n  static #_ = this.ɵfac = function RequestService_Factory(t) {\n    return new (t || RequestService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestService,\n    factory: RequestService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","RequestService","constructor","httpClient","baseUrl","url","getRequests","get","acceptRequest","requestId","robotId","put","getRequest","id","createRequest","data","post","updateRequest","deleteRequest","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\services\\request.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Request } from '../request';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RequestService {\r\n\r\n  baseUrl = environment.baseUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n    url = this.baseUrl + '/request';\r\n    \r\n    getRequests(){\r\n      return this.httpClient.get<JSON[]>(this.url);\r\n    }\r\n\r\n    acceptRequest(requestId: number, robotId: number): Observable<any> {\r\n      const url = `${this.baseUrl}/request/accept/${requestId}`;\r\n      // Puedes enviar el ID del carro al servidor si es necesario\r\n      return this.httpClient.put(url, { robotId });\r\n    }\r\n    \r\n\r\n    getRequest(id: number){\r\n      return this.httpClient.get<JSON>(this.url + '/' + id);\r\n    }\r\n    \r\n    createRequest(data: Request){\r\n      return this.httpClient.post(this.url, data)\r\n    }\r\n\r\n    updateRequest(data: Request){\r\n      return this.httpClient.put(this.url, data)\r\n    }\r\n\r\n    deleteRequest(id: number){\r\n      return this.httpClient.delete(this.url + '/' + id)\r\n    }\r\n\r\n}\r\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,gCAAgC;;;AAO5D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,OAAO,GAAGJ,WAAW,CAACI,OAAO;IAI3B,KAAAC,GAAG,GAAG,IAAI,CAACD,OAAO,GAAG,UAAU;EAFa;EAI5CE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAS,IAAI,CAACF,GAAG,CAAC;EAC9C;EAEAG,aAAaA,CAACC,SAAiB,EAAEC,OAAe;IAC9C,MAAML,GAAG,GAAG,GAAG,IAAI,CAACD,OAAO,mBAAmBK,SAAS,EAAE;IACzD;IACA,OAAO,IAAI,CAACN,UAAU,CAACQ,GAAG,CAACN,GAAG,EAAE;MAAEK;IAAO,CAAE,CAAC;EAC9C;EAGAE,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACV,UAAU,CAACI,GAAG,CAAO,IAAI,CAACF,GAAG,GAAG,GAAG,GAAGQ,EAAE,CAAC;EACvD;EAEAC,aAAaA,CAACC,IAAa;IACzB,OAAO,IAAI,CAACZ,UAAU,CAACa,IAAI,CAAC,IAAI,CAACX,GAAG,EAAEU,IAAI,CAAC;EAC7C;EAEAE,aAAaA,CAACF,IAAa;IACzB,OAAO,IAAI,CAACZ,UAAU,CAACQ,GAAG,CAAC,IAAI,CAACN,GAAG,EAAEU,IAAI,CAAC;EAC5C;EAEAG,aAAaA,CAACL,EAAU;IACtB,OAAO,IAAI,CAACV,UAAU,CAACgB,MAAM,CAAC,IAAI,CAACd,GAAG,GAAG,GAAG,GAAGQ,EAAE,CAAC;EACpD;EAAC,QAAAO,CAAA,G;qBAjCQnB,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdxB,cAAc;IAAAyB,OAAA,EAAdzB,cAAc,CAAA0B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}