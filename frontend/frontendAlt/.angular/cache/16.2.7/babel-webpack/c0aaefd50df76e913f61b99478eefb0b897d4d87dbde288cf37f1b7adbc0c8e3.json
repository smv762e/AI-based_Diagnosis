{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/request.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"../services/robot.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/table\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nfunction RequestListComponent_mat_header_cell_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestListComponent_mat_cell_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", element_r18.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r18.id);\n  }\n}\nfunction RequestListComponent_mat_header_cell_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Destino\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestListComponent_mat_cell_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r19 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", element_r19.route);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r19.route);\n  }\n}\nfunction RequestListComponent_mat_header_cell_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Medicamentos\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestListComponent_mat_cell_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r20 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", element_r20.drugs);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r20.drugs);\n  }\n}\nfunction RequestListComponent_mat_header_cell_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Carro Asociado\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestListComponent_mat_cell_12_mat_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const robot_r23 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", robot_r23.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", robot_r23.name, \" \");\n  }\n}\nfunction RequestListComponent_mat_cell_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"mat-select\", 15);\n    i0.ɵɵlistener(\"valueChange\", function RequestListComponent_mat_cell_12_Template_mat_select_valueChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const element_r21 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(element_r21.robotId = $event);\n    })(\"selectionChange\", function RequestListComponent_mat_cell_12_Template_mat_select_selectionChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const element_r21 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.onRobotSelected($event, element_r21));\n    });\n    i0.ɵɵtemplate(2, RequestListComponent_mat_cell_12_mat_option_2_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const element_r21 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", element_r21.robotId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.robots);\n  }\n}\nfunction RequestListComponent_mat_header_cell_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Estado\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestListComponent_mat_cell_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r27 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", element_r27.accepted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r27.accepted ? \"Aceptado\" : \"No aceptado\");\n  }\n}\nfunction RequestListComponent_mat_header_cell_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Aceptar\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestListComponent_mat_cell_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function RequestListComponent_mat_cell_18_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r30);\n      const element_r28 = restoredCtx.$implicit;\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.acceptRequest(element_r28.id));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"check\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction RequestListComponent_mat_header_cell_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Vista\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestListComponent_mat_cell_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"a\", 19)(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"visibility\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const element_r31 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/request/\", element_r31.id, \"\");\n  }\n}\nfunction RequestListComponent_mat_header_cell_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Eliminar\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestListComponent_mat_cell_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function RequestListComponent_mat_cell_24_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r34);\n      const element_r32 = restoredCtx.$implicit;\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.confirmDeletion(element_r32.id));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction RequestListComponent_mat_header_row_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction RequestListComponent_mat_row_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nexport class RequestListComponent {\n  constructor(requestService, snackbar, dialog, robotService) {\n    this.requestService = requestService;\n    this.snackbar = snackbar;\n    this.dialog = dialog;\n    this.robotService = robotService;\n    this.displayedColumns = ['id', 'route', 'drugs', 'robot', 'accepted', 'accept', 'view', 'delete'];\n    this.requests = [];\n    this.element = {};\n    this.robots = []; // Agregamos la lista de robots\n    this.dataSource = new MatTableDataSource(this.requests);\n  }\n  ngOnInit() {\n    this.updateData();\n    this.loadRobots(); // Cargamos la lista de robots al inicializar\n  }\n\n  updateData() {\n    this.requestService.getRequests().subscribe({\n      next: requests => {\n        console.log(requests);\n        this.requests = requests;\n        this.dataSource.data = this.requests;\n      },\n      error: e => {\n        this.snackbar.open('Error getting the solicitudes ' + e.error, '', {\n          duration: 3000\n        });\n      },\n      complete: () => console.log('done')\n    });\n  }\n  loadRobots() {\n    this.robotService.getRobots().subscribe({\n      next: robots => {\n        console.log(robots);\n        // Filtrar los robots con estado true\n        this.robots = robots.filter(robot => robot.estado === true);\n      },\n      error: e => {\n        this.snackbar.open('Error getting the robots ' + e.error, '', {\n          duration: 3000\n        });\n      },\n      complete: () => console.log('done')\n    });\n  }\n  delete(id) {\n    this.requestService.deleteRequest(id).subscribe({\n      next: () => {\n        this.updateData();\n      },\n      error: e => {\n        this.snackbar.open('Error deleting the solicitud ' + e.error, '', {\n          duration: 3000\n        });\n      },\n      complete: () => console.log('done')\n    });\n  }\n  confirmDeletion(id) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: {\n        title: 'Solicitud ' + id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.delete(id);\n      }\n    });\n  }\n  onRobotSelected(event, element) {\n    const selectedRobotId = event.value;\n    // Asignar el robot a la solicitud\n    element.robotId = selectedRobotId;\n  }\n  acceptRequest(requestId) {\n    // Obtén el ID del carro asociado desde el elemento actual\n    const robotId = this.requests.find(request => request.id === requestId)?.robotId;\n    if (robotId) {\n      // Llama al servicio para aceptar la solicitud y actualizar el estado del carro\n      this.requestService.acceptRequest(requestId, robotId).subscribe({\n        next: () => {\n          // Realiza cualquier acción adicional después de aceptar la solicitud\n          this.updateData();\n        },\n        error: e => {\n          this.snackbar.open('Error accepting the request ' + e.error, '', {\n            duration: 3000\n          });\n        },\n        complete: () => console.log('done')\n      });\n    }\n  }\n  static #_ = this.ɵfac = function RequestListComponent_Factory(t) {\n    return new (t || RequestListComponent)(i0.ɵɵdirectiveInject(i1.RequestService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.RobotService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RequestListComponent,\n    selectors: [[\"app-request-list\"]],\n    decls: 27,\n    vars: 3,\n    consts: [[3, \"dataSource\"], [\"matColumnDef\", \"id\"], [4, \"matHeaderCellDef\"], [3, \"title\", 4, \"matCellDef\"], [\"matColumnDef\", \"route\"], [\"matColumnDef\", \"drugs\"], [\"matColumnDef\", \"robot\"], [4, \"matCellDef\"], [\"matColumnDef\", \"accepted\"], [\"matColumnDef\", \"accept\"], [\"matColumnDef\", \"view\"], [\"matColumnDef\", \"delete\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [3, \"title\"], [3, \"value\", \"valueChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"mat-icon-button\", \"\", \"title\", \"Aceptar solicitud\", 3, \"click\"], [\"mat-icon-button\", \"\", \"title\", \"View/edit solicitud\", 3, \"routerLink\"], [\"mat-icon-button\", \"\", \"title\", \"Delete solicitud\", 3, \"click\"]],\n    template: function RequestListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-table\", 0);\n        i0.ɵɵelementContainerStart(1, 1);\n        i0.ɵɵtemplate(2, RequestListComponent_mat_header_cell_2_Template, 2, 0, \"mat-header-cell\", 2);\n        i0.ɵɵtemplate(3, RequestListComponent_mat_cell_3_Template, 2, 2, \"mat-cell\", 3);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(4, 4);\n        i0.ɵɵtemplate(5, RequestListComponent_mat_header_cell_5_Template, 2, 0, \"mat-header-cell\", 2);\n        i0.ɵɵtemplate(6, RequestListComponent_mat_cell_6_Template, 2, 2, \"mat-cell\", 3);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(7, 5);\n        i0.ɵɵtemplate(8, RequestListComponent_mat_header_cell_8_Template, 2, 0, \"mat-header-cell\", 2);\n        i0.ɵɵtemplate(9, RequestListComponent_mat_cell_9_Template, 2, 2, \"mat-cell\", 3);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(10, 6);\n        i0.ɵɵtemplate(11, RequestListComponent_mat_header_cell_11_Template, 2, 0, \"mat-header-cell\", 2);\n        i0.ɵɵtemplate(12, RequestListComponent_mat_cell_12_Template, 3, 2, \"mat-cell\", 7);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(13, 8);\n        i0.ɵɵtemplate(14, RequestListComponent_mat_header_cell_14_Template, 2, 0, \"mat-header-cell\", 2);\n        i0.ɵɵtemplate(15, RequestListComponent_mat_cell_15_Template, 2, 2, \"mat-cell\", 3);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(16, 9);\n        i0.ɵɵtemplate(17, RequestListComponent_mat_header_cell_17_Template, 2, 0, \"mat-header-cell\", 2);\n        i0.ɵɵtemplate(18, RequestListComponent_mat_cell_18_Template, 4, 0, \"mat-cell\", 7);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(19, 10);\n        i0.ɵɵtemplate(20, RequestListComponent_mat_header_cell_20_Template, 2, 0, \"mat-header-cell\", 2);\n        i0.ɵɵtemplate(21, RequestListComponent_mat_cell_21_Template, 4, 1, \"mat-cell\", 7);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(22, 11);\n        i0.ɵɵtemplate(23, RequestListComponent_mat_header_cell_23_Template, 2, 0, \"mat-header-cell\", 2);\n        i0.ɵɵtemplate(24, RequestListComponent_mat_cell_24_Template, 4, 0, \"mat-cell\", 7);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(25, RequestListComponent_mat_header_row_25_Template, 1, 0, \"mat-header-row\", 12);\n        i0.ɵɵtemplate(26, RequestListComponent_mat_row_26_Template, 1, 0, \"mat-row\", 13);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    dependencies: [i5.NgForOf, i6.RouterLink, i7.MatIcon, i8.MatIconAnchor, i8.MatIconButton, i9.MatTable, i9.MatHeaderCellDef, i9.MatHeaderRowDef, i9.MatColumnDef, i9.MatCellDef, i9.MatRowDef, i9.MatHeaderCell, i9.MatCell, i9.MatHeaderRow, i9.MatRow, i10.MatSelect, i11.MatOption],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["MatTableDataSource","ConfirmDialogComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵpropertyInterpolate","element_r18","id","ɵɵadvance","ɵɵtextInterpolate","element_r19","route","element_r20","drugs","ɵɵproperty","robot_r23","ɵɵtextInterpolate1","name","ɵɵlistener","RequestListComponent_mat_cell_12_Template_mat_select_valueChange_1_listener","$event","restoredCtx","ɵɵrestoreView","_r25","element_r21","$implicit","ɵɵresetView","robotId","RequestListComponent_mat_cell_12_Template_mat_select_selectionChange_1_listener","ctx_r26","ɵɵnextContext","onRobotSelected","ɵɵtemplate","RequestListComponent_mat_cell_12_mat_option_2_Template","ctx_r7","robots","element_r27","accepted","RequestListComponent_mat_cell_18_Template_button_click_1_listener","_r30","element_r28","ctx_r29","acceptRequest","ɵɵpropertyInterpolate1","element_r31","RequestListComponent_mat_cell_24_Template_button_click_1_listener","_r34","element_r32","ctx_r33","confirmDeletion","ɵɵelement","RequestListComponent","constructor","requestService","snackbar","dialog","robotService","displayedColumns","requests","element","dataSource","ngOnInit","updateData","loadRobots","getRequests","subscribe","next","console","log","data","error","e","open","duration","complete","getRobots","filter","robot","estado","delete","deleteRequest","dialogRef","width","title","afterClosed","result","event","selectedRobotId","value","requestId","find","request","_","ɵɵdirectiveInject","i1","RequestService","i2","MatSnackBar","i3","MatDialog","i4","RobotService","_2","selectors","decls","vars","consts","template","RequestListComponent_Template","rf","ctx","ɵɵelementContainerStart","RequestListComponent_mat_header_cell_2_Template","RequestListComponent_mat_cell_3_Template","ɵɵelementContainerEnd","RequestListComponent_mat_header_cell_5_Template","RequestListComponent_mat_cell_6_Template","RequestListComponent_mat_header_cell_8_Template","RequestListComponent_mat_cell_9_Template","RequestListComponent_mat_header_cell_11_Template","RequestListComponent_mat_cell_12_Template","RequestListComponent_mat_header_cell_14_Template","RequestListComponent_mat_cell_15_Template","RequestListComponent_mat_header_cell_17_Template","RequestListComponent_mat_cell_18_Template","RequestListComponent_mat_header_cell_20_Template","RequestListComponent_mat_cell_21_Template","RequestListComponent_mat_header_cell_23_Template","RequestListComponent_mat_cell_24_Template","RequestListComponent_mat_header_row_25_Template","RequestListComponent_mat_row_26_Template"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\solicitud\\solicitud.component.ts","C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\solicitud\\solicitud.component.html"],"sourcesContent":["// solicitud.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RequestService } from '../services/request.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { RobotService } from '../services/robot.service'; \r\n\r\n\r\n@Component({\r\n  selector: 'app-request-list',\r\n  templateUrl: './solicitud.component.html',\r\n  styleUrls: ['./solicitud.component.css']\r\n})\r\nexport class RequestListComponent implements OnInit {\r\n  [x: string]: any;\r\n\r\n  displayedColumns = ['id', 'route', 'drugs', 'robot', 'accepted', 'accept', 'view', 'delete'];\r\n  requests: any[] = [];\r\n  element = {};\r\n  robots: any[] = [];  // Agregamos la lista de robots\r\n  dataSource = new MatTableDataSource(this.requests);\r\n\r\n  constructor(private requestService: RequestService,\r\n    private snackbar: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private robotService: RobotService  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.updateData();\r\n    this.loadRobots();  // Cargamos la lista de robots al inicializar\r\n  }\r\n\r\n  updateData() {\r\n    this.requestService.getRequests().subscribe({\r\n      next: (requests: any[]) => {\r\n        console.log(requests);\r\n        this.requests = requests;\r\n        this.dataSource.data = this.requests;\r\n      },\r\n      error: (e: any) => {\r\n        this.snackbar.open('Error getting the solicitudes ' + e.error, '', {\r\n          duration: 3000\r\n        });\r\n      },\r\n      complete: () => console.log('done'),\r\n    });\r\n  }\r\n\r\n  loadRobots() {\r\n    this.robotService.getRobots().subscribe({\r\n      next: (robots: any[]) => {\r\n        console.log(robots);\r\n        // Filtrar los robots con estado true\r\n        this.robots = robots.filter(robot => robot.estado === true);\r\n      },\r\n      error: (e: any) => {\r\n        this.snackbar.open('Error getting the robots ' + e.error, '', {\r\n          duration: 3000\r\n        });\r\n      },\r\n      complete: () => console.log('done'),\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.requestService.deleteRequest(id).subscribe({\r\n      next: () => {\r\n        this.updateData();\r\n      },\r\n      error: (e: any) => {\r\n        this.snackbar.open('Error deleting the solicitud ' + e.error, '', {\r\n          duration: 3000\r\n        });\r\n      },\r\n      complete: () => console.log('done'),\r\n    });\r\n  }\r\n\r\n  confirmDeletion(id: number) {\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      width: '250px',\r\n      data: { title: 'Solicitud ' + id }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.delete(id);\r\n      }\r\n    });\r\n  }\r\n  onRobotSelected(event: any, element: any) {\r\n    const selectedRobotId = event.value;\r\n    // Asignar el robot a la solicitud\r\n    element.robotId = selectedRobotId;\r\n  }\r\n  \r\n  acceptRequest(requestId: number) {\r\n    // Obtén el ID del carro asociado desde el elemento actual\r\n    const robotId = this.requests.find(request => request.id === requestId)?.robotId;\r\n  \r\n    if (robotId) {\r\n      // Llama al servicio para aceptar la solicitud y actualizar el estado del carro\r\n      this.requestService.acceptRequest(requestId, robotId).subscribe({\r\n        next: () => {\r\n          // Realiza cualquier acción adicional después de aceptar la solicitud\r\n          this.updateData();\r\n        },\r\n        error: (e: any) => {\r\n          this.snackbar.open('Error accepting the request ' + e.error, '', {\r\n            duration: 3000\r\n          });\r\n        },\r\n        complete: () => console.log('done'),\r\n      });\r\n    }\r\n  }\r\n  \r\n}\r\n","<!-- solicitud.component.html -->\r\n<mat-table [dataSource]=\"dataSource\">\r\n  <!-- Define the columns -->\r\n  <ng-container matColumnDef=\"id\">\r\n    <mat-header-cell *matHeaderCellDef>ID</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\" title=\"{{element.id}}\">{{element.id}}</mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"route\">\r\n    <mat-header-cell *matHeaderCellDef>Destino</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\" title=\"{{element.route}}\">{{element.route}}</mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"drugs\">\r\n    <mat-header-cell *matHeaderCellDef>Medicamentos</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\" title=\"{{element.drugs}}\">{{element.drugs}}</mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"robot\">\r\n    <mat-header-cell *matHeaderCellDef>Carro Asociado</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\">\r\n      <mat-select [(value)]=\"element.robotId\" (selectionChange)=\"onRobotSelected($event, element)\">\r\n        <mat-option *ngFor=\"let robot of robots\" [value]=\"robot.id\">\r\n          {{robot.name}} <!-- Ajusta esto según la estructura de tu objeto robot -->\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"accepted\">\r\n    <mat-header-cell *matHeaderCellDef>Estado</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\" title=\"{{element.accepted}}\">{{ element.accepted ? 'Aceptado' : 'No aceptado' }}</mat-cell>\r\n  </ng-container>\r\n\r\n\r\n  <ng-container matColumnDef=\"accept\">\r\n    <mat-header-cell *matHeaderCellDef>Aceptar</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\">\r\n      <button mat-icon-button title=\"Aceptar solicitud\" (click)=\"acceptRequest(element.id)\">\r\n        <mat-icon>check</mat-icon>\r\n      </button>\r\n    </mat-cell>\r\n  </ng-container>\r\n  \r\n\r\n  <ng-container matColumnDef=\"view\">\r\n    <mat-header-cell *matHeaderCellDef>Vista</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\">\r\n      <a mat-icon-button title=\"View/edit solicitud\" routerLink=\"/request/{{element.id}}\">\r\n        <mat-icon>visibility</mat-icon>\r\n      </a>\r\n    </mat-cell>\r\n  </ng-container>\r\n\r\n  <ng-container matColumnDef=\"delete\">\r\n    <mat-header-cell *matHeaderCellDef>Eliminar</mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\">\r\n      <button mat-icon-button title=\"Delete solicitud\" (click)=\"confirmDeletion(element.id)\">\r\n        <mat-icon>delete</mat-icon>\r\n      </button>\r\n    </mat-cell>\r\n  </ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n</mat-table>\r\n"],"mappings":"AAGA,SAASA,kBAAkB,QAAQ,yBAAyB;AAE5D,SAASC,sBAAsB,QAAQ,4CAA4C;;;;;;;;;;;;;;;ICD/EC,EAAA,CAAAC,cAAA,sBAAmC;IAAAD,EAAA,CAAAE,MAAA,SAAE;IAAAF,EAAA,CAAAG,YAAA,EAAkB;;;;;IACvDH,EAAA,CAAAC,cAAA,mBAA2D;IAAAD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAAhDH,EAAA,CAAAI,qBAAA,UAAAC,WAAA,CAAAC,EAAA,CAAsB;IAACN,EAAA,CAAAO,SAAA,GAAc;IAAdP,EAAA,CAAAQ,iBAAA,CAAAH,WAAA,CAAAC,EAAA,CAAc;;;;;IAIzEN,EAAA,CAAAC,cAAA,sBAAmC;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAkB;;;;;IAC5DH,EAAA,CAAAC,cAAA,mBAA8D;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAAtDH,EAAA,CAAAI,qBAAA,UAAAK,WAAA,CAAAC,KAAA,CAAyB;IAACV,EAAA,CAAAO,SAAA,GAAiB;IAAjBP,EAAA,CAAAQ,iBAAA,CAAAC,WAAA,CAAAC,KAAA,CAAiB;;;;;IAI/EV,EAAA,CAAAC,cAAA,sBAAmC;IAAAD,EAAA,CAAAE,MAAA,mBAAY;IAAAF,EAAA,CAAAG,YAAA,EAAkB;;;;;IACjEH,EAAA,CAAAC,cAAA,mBAA8D;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAAtDH,EAAA,CAAAI,qBAAA,UAAAO,WAAA,CAAAC,KAAA,CAAyB;IAACZ,EAAA,CAAAO,SAAA,GAAiB;IAAjBP,EAAA,CAAAQ,iBAAA,CAAAG,WAAA,CAAAC,KAAA,CAAiB;;;;;IAI/EZ,EAAA,CAAAC,cAAA,sBAAmC;IAAAD,EAAA,CAAAE,MAAA,qBAAc;IAAAF,EAAA,CAAAG,YAAA,EAAkB;;;;;IAG/DH,EAAA,CAAAC,cAAA,qBAA4D;IAC1DD,EAAA,CAAAE,MAAA,GAAe;IACjBF,EAAA,CAAAG,YAAA,EAAa;;;;IAF4BH,EAAA,CAAAa,UAAA,UAAAC,SAAA,CAAAR,EAAA,CAAkB;IACzDN,EAAA,CAAAO,SAAA,GAAe;IAAfP,EAAA,CAAAe,kBAAA,MAAAD,SAAA,CAAAE,IAAA,MAAe;;;;;;IAHrBhB,EAAA,CAAAC,cAAA,eAAoC;IACtBD,EAAA,CAAAiB,UAAA,yBAAAC,4EAAAC,MAAA;MAAA,MAAAC,WAAA,GAAApB,EAAA,CAAAqB,aAAA,CAAAC,IAAA;MAAA,MAAAC,WAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,OAAWxB,EAAA,CAAAyB,WAAA,CAAAF,WAAA,CAAAG,OAAA,GAAAP,MAAA,CAAuB;IAAA,EAAP,6BAAAQ,gFAAAR,MAAA;MAAA,MAAAC,WAAA,GAAApB,EAAA,CAAAqB,aAAA,CAAAC,IAAA;MAAA,MAAAC,WAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAI,OAAA,GAAA5B,EAAA,CAAA6B,aAAA;MAAA,OAAoB7B,EAAA,CAAAyB,WAAA,CAAAG,OAAA,CAAAE,eAAA,CAAAX,MAAA,EAAAI,WAAA,CAAgC;IAAA,EAApD;IACrCvB,EAAA,CAAA+B,UAAA,IAAAC,sDAAA,yBAEa;IACfhC,EAAA,CAAAG,YAAA,EAAa;;;;;IAJDH,EAAA,CAAAO,SAAA,GAA2B;IAA3BP,EAAA,CAAAa,UAAA,UAAAU,WAAA,CAAAG,OAAA,CAA2B;IACP1B,EAAA,CAAAO,SAAA,GAAS;IAATP,EAAA,CAAAa,UAAA,YAAAoB,MAAA,CAAAC,MAAA,CAAS;;;;;IAQ3ClC,EAAA,CAAAC,cAAA,sBAAmC;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAkB;;;;;IAC3DH,EAAA,CAAAC,cAAA,mBAAiE;IAAAD,EAAA,CAAAE,MAAA,GAAmD;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAA3FH,EAAA,CAAAI,qBAAA,UAAA+B,WAAA,CAAAC,QAAA,CAA4B;IAACpC,EAAA,CAAAO,SAAA,GAAmD;IAAnDP,EAAA,CAAAQ,iBAAA,CAAA2B,WAAA,CAAAC,QAAA,8BAAmD;;;;;IAKpHpC,EAAA,CAAAC,cAAA,sBAAmC;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAkB;;;;;;IAC5DH,EAAA,CAAAC,cAAA,eAAoC;IACgBD,EAAA,CAAAiB,UAAA,mBAAAoB,kEAAA;MAAA,MAAAjB,WAAA,GAAApB,EAAA,CAAAqB,aAAA,CAAAiB,IAAA;MAAA,MAAAC,WAAA,GAAAnB,WAAA,CAAAI,SAAA;MAAA,MAAAgB,OAAA,GAAAxC,EAAA,CAAA6B,aAAA;MAAA,OAAS7B,EAAA,CAAAyB,WAAA,CAAAe,OAAA,CAAAC,aAAA,CAAAF,WAAA,CAAAjC,EAAA,CAAyB;IAAA,EAAC;IACnFN,EAAA,CAAAC,cAAA,eAAU;IAAAD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;;IAO9BH,EAAA,CAAAC,cAAA,sBAAmC;IAAAD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAkB;;;;;IAC1DH,EAAA,CAAAC,cAAA,eAAoC;IAEtBD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IADcH,EAAA,CAAAO,SAAA,GAAoC;IAApCP,EAAA,CAAA0C,sBAAA,4BAAAC,WAAA,CAAArC,EAAA,KAAoC;;;;;IAOrFN,EAAA,CAAAC,cAAA,sBAAmC;IAAAD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAkB;;;;;;IAC7DH,EAAA,CAAAC,cAAA,eAAoC;IACeD,EAAA,CAAAiB,UAAA,mBAAA2B,kEAAA;MAAA,MAAAxB,WAAA,GAAApB,EAAA,CAAAqB,aAAA,CAAAwB,IAAA;MAAA,MAAAC,WAAA,GAAA1B,WAAA,CAAAI,SAAA;MAAA,MAAAuB,OAAA,GAAA/C,EAAA,CAAA6B,aAAA;MAAA,OAAS7B,EAAA,CAAAyB,WAAA,CAAAsB,OAAA,CAAAC,eAAA,CAAAF,WAAA,CAAAxC,EAAA,CAA2B;IAAA,EAAC;IACpFN,EAAA,CAAAC,cAAA,eAAU;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;;IAKjCH,EAAA,CAAAiD,SAAA,qBAAqE;;;;;IACrEjD,EAAA,CAAAiD,SAAA,cAAoE;;;ADjDtE,OAAM,MAAOC,oBAAoB;EAS/BC,YAAoBC,cAA8B,EACxCC,QAAqB,EACtBC,MAAiB,EAChBC,YAA0B;IAHhB,KAAAH,cAAc,GAAdA,cAAc;IACxB,KAAAC,QAAQ,GAARA,QAAQ;IACT,KAAAC,MAAM,GAANA,MAAM;IACL,KAAAC,YAAY,GAAZA,YAAY;IATtB,KAAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;IAC5F,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,OAAO,GAAG,EAAE;IACZ,KAAAxB,MAAM,GAAU,EAAE,CAAC,CAAE;IACrB,KAAAyB,UAAU,GAAG,IAAI7D,kBAAkB,CAAC,IAAI,CAAC2D,QAAQ,CAAC;EAKR;EAE1CG,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;IACjB,IAAI,CAACC,UAAU,EAAE,CAAC,CAAE;EACtB;;EAEAD,UAAUA,CAAA;IACR,IAAI,CAACT,cAAc,CAACW,WAAW,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAGR,QAAe,IAAI;QACxBS,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;QACrB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;QACxB,IAAI,CAACE,UAAU,CAACS,IAAI,GAAG,IAAI,CAACX,QAAQ;MACtC,CAAC;MACDY,KAAK,EAAGC,CAAM,IAAI;QAChB,IAAI,CAACjB,QAAQ,CAACkB,IAAI,CAAC,gCAAgC,GAAGD,CAAC,CAACD,KAAK,EAAE,EAAE,EAAE;UACjEG,QAAQ,EAAE;SACX,CAAC;MACJ,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAMP,OAAO,CAACC,GAAG,CAAC,MAAM;KACnC,CAAC;EACJ;EAEAL,UAAUA,CAAA;IACR,IAAI,CAACP,YAAY,CAACmB,SAAS,EAAE,CAACV,SAAS,CAAC;MACtCC,IAAI,EAAG/B,MAAa,IAAI;QACtBgC,OAAO,CAACC,GAAG,CAACjC,MAAM,CAAC;QACnB;QACA,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACyC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,IAAI,CAAC;MAC7D,CAAC;MACDR,KAAK,EAAGC,CAAM,IAAI;QAChB,IAAI,CAACjB,QAAQ,CAACkB,IAAI,CAAC,2BAA2B,GAAGD,CAAC,CAACD,KAAK,EAAE,EAAE,EAAE;UAC5DG,QAAQ,EAAE;SACX,CAAC;MACJ,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAMP,OAAO,CAACC,GAAG,CAAC,MAAM;KACnC,CAAC;EACJ;EAEAW,MAAMA,CAACxE,EAAU;IACf,IAAI,CAAC8C,cAAc,CAAC2B,aAAa,CAACzE,EAAE,CAAC,CAAC0D,SAAS,CAAC;MAC9CC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACJ,UAAU,EAAE;MACnB,CAAC;MACDQ,KAAK,EAAGC,CAAM,IAAI;QAChB,IAAI,CAACjB,QAAQ,CAACkB,IAAI,CAAC,+BAA+B,GAAGD,CAAC,CAACD,KAAK,EAAE,EAAE,EAAE;UAChEG,QAAQ,EAAE;SACX,CAAC;MACJ,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAMP,OAAO,CAACC,GAAG,CAAC,MAAM;KACnC,CAAC;EACJ;EAEAnB,eAAeA,CAAC1C,EAAU;IACxB,MAAM0E,SAAS,GAAG,IAAI,CAAC1B,MAAM,CAACiB,IAAI,CAACxE,sBAAsB,EAAE;MACzDkF,KAAK,EAAE,OAAO;MACdb,IAAI,EAAE;QAAEc,KAAK,EAAE,YAAY,GAAG5E;MAAE;KACjC,CAAC;IAEF0E,SAAS,CAACG,WAAW,EAAE,CAACnB,SAAS,CAACoB,MAAM,IAAG;MACzC,IAAIA,MAAM,EAAE;QACV,IAAI,CAACN,MAAM,CAACxE,EAAE,CAAC;;IAEnB,CAAC,CAAC;EACJ;EACAwB,eAAeA,CAACuD,KAAU,EAAE3B,OAAY;IACtC,MAAM4B,eAAe,GAAGD,KAAK,CAACE,KAAK;IACnC;IACA7B,OAAO,CAAChC,OAAO,GAAG4D,eAAe;EACnC;EAEA7C,aAAaA,CAAC+C,SAAiB;IAC7B;IACA,MAAM9D,OAAO,GAAG,IAAI,CAAC+B,QAAQ,CAACgC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACpF,EAAE,KAAKkF,SAAS,CAAC,EAAE9D,OAAO;IAEhF,IAAIA,OAAO,EAAE;MACX;MACA,IAAI,CAAC0B,cAAc,CAACX,aAAa,CAAC+C,SAAS,EAAE9D,OAAO,CAAC,CAACsC,SAAS,CAAC;QAC9DC,IAAI,EAAEA,CAAA,KAAK;UACT;UACA,IAAI,CAACJ,UAAU,EAAE;QACnB,CAAC;QACDQ,KAAK,EAAGC,CAAM,IAAI;UAChB,IAAI,CAACjB,QAAQ,CAACkB,IAAI,CAAC,8BAA8B,GAAGD,CAAC,CAACD,KAAK,EAAE,EAAE,EAAE;YAC/DG,QAAQ,EAAE;WACX,CAAC;QACJ,CAAC;QACDC,QAAQ,EAAEA,CAAA,KAAMP,OAAO,CAACC,GAAG,CAAC,MAAM;OACnC,CAAC;;EAEN;EAAC,QAAAwB,CAAA,G;qBAtGUzC,oBAAoB,EAAAlD,EAAA,CAAA4F,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA9F,EAAA,CAAA4F,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAhG,EAAA,CAAA4F,iBAAA,CAAAK,EAAA,CAAAC,SAAA,GAAAlG,EAAA,CAAA4F,iBAAA,CAAAO,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBnD,oBAAoB;IAAAoD,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCdjC5G,EAAA,CAAAC,cAAA,mBAAqC;QAEnCD,EAAA,CAAA8G,uBAAA,MAAgC;QAC9B9G,EAAA,CAAA+B,UAAA,IAAAgF,+CAAA,6BAAuD;QACvD/G,EAAA,CAAA+B,UAAA,IAAAiF,wCAAA,sBAAoF;QACtFhH,EAAA,CAAAiH,qBAAA,EAAe;QAEfjH,EAAA,CAAA8G,uBAAA,MAAmC;QACjC9G,EAAA,CAAA+B,UAAA,IAAAmF,+CAAA,6BAA4D;QAC5DlH,EAAA,CAAA+B,UAAA,IAAAoF,wCAAA,sBAA0F;QAC5FnH,EAAA,CAAAiH,qBAAA,EAAe;QAEfjH,EAAA,CAAA8G,uBAAA,MAAmC;QACjC9G,EAAA,CAAA+B,UAAA,IAAAqF,+CAAA,6BAAiE;QACjEpH,EAAA,CAAA+B,UAAA,IAAAsF,wCAAA,sBAA0F;QAC5FrH,EAAA,CAAAiH,qBAAA,EAAe;QAEfjH,EAAA,CAAA8G,uBAAA,OAAmC;QACjC9G,EAAA,CAAA+B,UAAA,KAAAuF,gDAAA,6BAAmE;QACnEtH,EAAA,CAAA+B,UAAA,KAAAwF,yCAAA,sBAMW;QACbvH,EAAA,CAAAiH,qBAAA,EAAe;QAEfjH,EAAA,CAAA8G,uBAAA,OAAsC;QACpC9G,EAAA,CAAA+B,UAAA,KAAAyF,gDAAA,6BAA2D;QAC3DxH,EAAA,CAAA+B,UAAA,KAAA0F,yCAAA,sBAA+H;QACjIzH,EAAA,CAAAiH,qBAAA,EAAe;QAGfjH,EAAA,CAAA8G,uBAAA,OAAoC;QAClC9G,EAAA,CAAA+B,UAAA,KAAA2F,gDAAA,6BAA4D;QAC5D1H,EAAA,CAAA+B,UAAA,KAAA4F,yCAAA,sBAIW;QACb3H,EAAA,CAAAiH,qBAAA,EAAe;QAGfjH,EAAA,CAAA8G,uBAAA,QAAkC;QAChC9G,EAAA,CAAA+B,UAAA,KAAA6F,gDAAA,6BAA0D;QAC1D5H,EAAA,CAAA+B,UAAA,KAAA8F,yCAAA,sBAIW;QACb7H,EAAA,CAAAiH,qBAAA,EAAe;QAEfjH,EAAA,CAAA8G,uBAAA,QAAoC;QAClC9G,EAAA,CAAA+B,UAAA,KAAA+F,gDAAA,6BAA6D;QAC7D9H,EAAA,CAAA+B,UAAA,KAAAgG,yCAAA,sBAIW;QACb/H,EAAA,CAAAiH,qBAAA,EAAe;QAEfjH,EAAA,CAAA+B,UAAA,KAAAiG,+CAAA,6BAAqE;QACrEhI,EAAA,CAAA+B,UAAA,KAAAkG,wCAAA,sBAAoE;QACtEjI,EAAA,CAAAG,YAAA,EAAY;;;QAhEDH,EAAA,CAAAa,UAAA,eAAAgG,GAAA,CAAAlD,UAAA,CAAyB;QA8DjB3D,EAAA,CAAAO,SAAA,IAAiC;QAAjCP,EAAA,CAAAa,UAAA,oBAAAgG,GAAA,CAAArD,gBAAA,CAAiC;QACpBxD,EAAA,CAAAO,SAAA,GAA0B;QAA1BP,EAAA,CAAAa,UAAA,qBAAAgG,GAAA,CAAArD,gBAAA,CAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}