{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Request } from '../request';\nexport let CreateSolicitudComponent = class CreateSolicitudComponent {\n  constructor(requestService, medicalService,\n  // Inject the MedicalService\n  snackbar, router, route, _location) {\n    this.requestService = requestService;\n    this.medicalService = medicalService;\n    this.snackbar = snackbar;\n    this.router = router;\n    this.route = route;\n    this._location = _location;\n    this.request = new Request();\n    this.create = true;\n    this.requestId = 0;\n  }\n  ngOnInit() {\n    if (this.route.snapshot.paramMap.has('id')) {\n      this.requestId = Number(this.route.snapshot.paramMap.get('id'));\n      this.create = false;\n    }\n    if (!this.create) {\n      this.requestService.getRequest(this.requestId).subscribe({\n        next: data => {\n          this.request = data;\n        },\n        error: e => {\n          this.snackbar.open('Error communicating with the server', '', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n  back() {\n    this._location.back();\n  }\n  onSubmit(request) {\n    if (this.create) {\n      // Fetch the complete Medical object based on the ID\n      this.medicalService.getMedicalById(request.medico).subscribe({\n        next: medicoData => {\n          // Assign the complete Medical object to the request\n          request.medico = medicoData;\n          // Submit the request to create\n          this.requestService.createRequest(request).subscribe({\n            next: () => {\n              this.router.navigateByUrl('/request');\n              this.snackbar.open('Solicitud created ', '', {\n                duration: 3000\n              });\n            },\n            error: e => {\n              this.snackbar.open('Error creating the solicitud: ' + e.error, '', {\n                duration: 3000\n              });\n            }\n          });\n        },\n        error: error => {\n          // Handle error fetching medical professional\n          this.snackbar.open('Error fetching medical professional: ' + error, '', {\n            duration: 3000\n          });\n        }\n      });\n    } else {\n      // Similar logic for updating the request\n      // You can choose to fetch the medical professional if needed\n      this.requestService.updateRequest(request).subscribe({\n        next: () => {\n          this.router.navigateByUrl('/request');\n          this.snackbar.open('Solicitud updated ', '', {\n            duration: 3000\n          });\n        },\n        error: e => {\n          this.snackbar.open('Error updating the solicitud: ' + e.error, '', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n};\nCreateSolicitudComponent = __decorate([Component({\n  selector: 'app-create-solicitud',\n  templateUrl: './create-solicitud.component.html',\n  styleUrls: ['./create-solicitud.component.css']\n})], CreateSolicitudComponent);","map":{"version":3,"names":["Component","Request","CreateSolicitudComponent","constructor","requestService","medicalService","snackbar","router","route","_location","request","create","requestId","ngOnInit","snapshot","paramMap","has","Number","get","getRequest","subscribe","next","data","error","e","open","duration","back","onSubmit","getMedicalById","medico","medicoData","createRequest","navigateByUrl","updateRequest","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\sermv\\Desktop\\4ºIngeniería\\Web\\HWA\\frontend\\frontendAlt\\src\\app\\create-solicitud\\create-solicitud.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { RequestService } from '../services/request.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Request } from '../request';\nimport { Location } from '@angular/common';\nimport { MedicalService } from '../services/medical.service'; // Import the MedicalService\n\n@Component({\n  selector: 'app-create-solicitud',\n  templateUrl: './create-solicitud.component.html',\n  styleUrls: ['./create-solicitud.component.css']\n})\nexport class CreateSolicitudComponent {\n\n  request: Request = new Request();\n  create: boolean = true;\n  requestId: number = 0;\n\n  constructor(\n    private requestService: RequestService,\n    private medicalService: MedicalService, // Inject the MedicalService\n    private snackbar: MatSnackBar,\n    private router: Router,\n    private route: ActivatedRoute,\n    private _location: Location\n  ) { }\n\n  ngOnInit(): void {\n    if (this.route.snapshot.paramMap.has('id')) {\n      this.requestId = Number(this.route.snapshot.paramMap.get('id'));\n      this.create = false;\n    }\n\n    if (!this.create) {\n      this.requestService.getRequest(this.requestId).subscribe({\n        next: (data: any) => {\n          this.request = <Request>data;\n        },\n        error: (e: any) => {\n          this.snackbar.open('Error communicating with the server', '', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n\n  back() {\n    this._location.back();\n  }\n\n  onSubmit(request: Request) {\n    if (this.create) {\n      // Fetch the complete Medical object based on the ID\n      this.medicalService.getMedicalById(request.medico).subscribe({\n        next: (medicoData: any) => {\n          // Assign the complete Medical object to the request\n          request.medico = medicoData;\n\n          // Submit the request to create\n          this.requestService.createRequest(request).subscribe({\n            next: () => {\n              this.router.navigateByUrl('/request');\n              this.snackbar.open('Solicitud created ', '', {\n                duration: 3000\n              });\n            },\n            error: (e: any) => {\n              this.snackbar.open('Error creating the solicitud: ' + e.error, '', {\n                duration: 3000\n              });\n            }\n          });\n        },\n        error: (error: any) => {\n          // Handle error fetching medical professional\n          this.snackbar.open('Error fetching medical professional: ' + error, '', {\n            duration: 3000\n          });\n        }\n      });\n    } else {\n      // Similar logic for updating the request\n      // You can choose to fetch the medical professional if needed\n      this.requestService.updateRequest(request).subscribe({\n        next: () => {\n          this.router.navigateByUrl('/request');\n          this.snackbar.open('Solicitud updated ', '', {\n            duration: 3000\n          });\n        },\n        error: (e: any) => {\n          this.snackbar.open('Error updating the solicitud: ' + e.error, '', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAIzC,SAASC,OAAO,QAAQ,YAAY;AAS7B,WAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAMnCC,YACUC,cAA8B,EAC9BC,cAA8B;EAAE;EAChCC,QAAqB,EACrBC,MAAc,EACdC,KAAqB,EACrBC,SAAmB;IALnB,KAAAL,cAAc,GAAdA,cAAc;IACd,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;IAVnB,KAAAC,OAAO,GAAY,IAAIT,OAAO,EAAE;IAChC,KAAAU,MAAM,GAAY,IAAI;IACtB,KAAAC,SAAS,GAAW,CAAC;EASjB;EAEJC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,EAAE;MAC1C,IAAI,CAACJ,SAAS,GAAGK,MAAM,CAAC,IAAI,CAACT,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACG,GAAG,CAAC,IAAI,CAAC,CAAC;MAC/D,IAAI,CAACP,MAAM,GAAG,KAAK;;IAGrB,IAAI,CAAC,IAAI,CAACA,MAAM,EAAE;MAChB,IAAI,CAACP,cAAc,CAACe,UAAU,CAAC,IAAI,CAACP,SAAS,CAAC,CAACQ,SAAS,CAAC;QACvDC,IAAI,EAAGC,IAAS,IAAI;UAClB,IAAI,CAACZ,OAAO,GAAYY,IAAI;QAC9B,CAAC;QACDC,KAAK,EAAGC,CAAM,IAAI;UAChB,IAAI,CAAClB,QAAQ,CAACmB,IAAI,CAAC,qCAAqC,EAAE,EAAE,EAAE;YAC5DC,QAAQ,EAAE;WACX,CAAC;QACJ;OACD,CAAC;;EAEN;EAEAC,IAAIA,CAAA;IACF,IAAI,CAAClB,SAAS,CAACkB,IAAI,EAAE;EACvB;EAEAC,QAAQA,CAAClB,OAAgB;IACvB,IAAI,IAAI,CAACC,MAAM,EAAE;MACf;MACA,IAAI,CAACN,cAAc,CAACwB,cAAc,CAACnB,OAAO,CAACoB,MAAM,CAAC,CAACV,SAAS,CAAC;QAC3DC,IAAI,EAAGU,UAAe,IAAI;UACxB;UACArB,OAAO,CAACoB,MAAM,GAAGC,UAAU;UAE3B;UACA,IAAI,CAAC3B,cAAc,CAAC4B,aAAa,CAACtB,OAAO,CAAC,CAACU,SAAS,CAAC;YACnDC,IAAI,EAAEA,CAAA,KAAK;cACT,IAAI,CAACd,MAAM,CAAC0B,aAAa,CAAC,UAAU,CAAC;cACrC,IAAI,CAAC3B,QAAQ,CAACmB,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE;gBAC3CC,QAAQ,EAAE;eACX,CAAC;YACJ,CAAC;YACDH,KAAK,EAAGC,CAAM,IAAI;cAChB,IAAI,CAAClB,QAAQ,CAACmB,IAAI,CAAC,gCAAgC,GAAGD,CAAC,CAACD,KAAK,EAAE,EAAE,EAAE;gBACjEG,QAAQ,EAAE;eACX,CAAC;YACJ;WACD,CAAC;QACJ,CAAC;QACDH,KAAK,EAAGA,KAAU,IAAI;UACpB;UACA,IAAI,CAACjB,QAAQ,CAACmB,IAAI,CAAC,uCAAuC,GAAGF,KAAK,EAAE,EAAE,EAAE;YACtEG,QAAQ,EAAE;WACX,CAAC;QACJ;OACD,CAAC;KACH,MAAM;MACL;MACA;MACA,IAAI,CAACtB,cAAc,CAAC8B,aAAa,CAACxB,OAAO,CAAC,CAACU,SAAS,CAAC;QACnDC,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACd,MAAM,CAAC0B,aAAa,CAAC,UAAU,CAAC;UACrC,IAAI,CAAC3B,QAAQ,CAACmB,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE;YAC3CC,QAAQ,EAAE;WACX,CAAC;QACJ,CAAC;QACDH,KAAK,EAAGC,CAAM,IAAI;UAChB,IAAI,CAAClB,QAAQ,CAACmB,IAAI,CAAC,gCAAgC,GAAGD,CAAC,CAACD,KAAK,EAAE,EAAE,EAAE;YACjEG,QAAQ,EAAE;WACX,CAAC;QACJ;OACD,CAAC;;EAEN;CAED;AAxFYxB,wBAAwB,GAAAiC,UAAA,EALpCnC,SAAS,CAAC;EACToC,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWpC,wBAAwB,CAwFpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}